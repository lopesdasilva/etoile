# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~
#TESTING
GET /loaderio-49190389002c14da4e54f8762f1df395.txt  controllers.Assets.at(path="/public", file="/loaderio-067ddde84d7a2a84db56390772328fe6.txt")
GET /loaderio-49190389002c14da4e54f8762f1df395/ 	controllers.Application.loaderTests()
GET /loaderio-23349bf5ce435674e678350a496740f1/ controllers.Application.loaderTests1()


# Icons
GET     /assets/images/glyphicons-halflings-white.png      controllers.Assets.at(path="/public", file="/images/glyphicons-halflings-white.png")
GET     /assets/images/glyphicons-halflings.png            controllers.Assets.at(path="/public", file="/images/glyphicons-halflings.png")

GET		/tests					controllers.Application.tests()
GET     /document                   controllers.StudentTestController.document(test: Long)

# Home page
GET     /                           controllers.StudentController.index()
GET		/index						controllers.Application.index()
GET		/						controllers.ProfessorController.index()
GET		/managecurriculum					controllers.ProfessorController.manageCurriculum()
GET /managecurriculum/deleteresource/:resource	controllers.ProfessorController.deleteExternalResource(resource: Long)


# Authentication
GET     /login                              controllers.Application.login()
POST    /login                              controllers.Application.authenticate()
GET     /logout                             controllers.Application.logout()
GET		/register							controllers.Register.register2()
POST	/register							controllers.Register.register()
POST	/resetpassword						controllers.Register.resetpassword()

#User
GET		/myprofile							controllers.ProfessorController.myprofile()
POST	/myprofile/addprofilecontent		controllers.ProfessorProfileController.addprofilecontent()
GET		/myprofile/deleteprofilecontent		controllers.ProfessorProfileController.deleteprofilecontent(content: Long)
POST	/myprofile/editprofilecontent		controllers.ProfessorProfileController.editprofilecontent(content: Long)
POST	/myprofile/editprofilecontact		controllers.ProfessorProfileController.editprofilecontact()
POST	/myprofile/editprofil				controllers.ProfessorProfileController.editprofile()
POST	/myprofile/editprofile				controllers.StudentController.editprofile()
POST	/myprofile/editprofileabout			controllers.StudentController.editprofileabout()
POST	/myprofile/changepassword			controllers.StudentController.changepassword()
POST	/myprofile/changeprivacy			controllers.StudentController.changeprivacy()
GET		/myprofile/settings						controllers.StudentController.settings()
POST	/olduser							controllers.StudentController.olduser()
GET     /addResource                        controllers.StudentController.resource()
POST     /addResource                        controllers.StudentController.addResource()


#Static pages
GET		/about						controllers.Application.about()
GET		/curriculumdendrogram						controllers.Application.curriculumdendrogram()
GET		/moduledendrogram/:module						controllers.Application.moduledendrogram(module: String)
GET		/contact					controllers.Application.contact()
GET		/curriculum					controllers.Application.curriculum()
GET		/digitalcampus					controllers.Application.digitalcampus()
GET     /statistics                     controllers.Application.statistics()
GET     /reputation                    controllers.Application.reputation()
GET     /help                           controllers.Application.help()
GET     /helpsignup                      controllers.Application.helpsignup()
GET     /helpincreasereputation         controllers.Application.helpincreasereputation()
GET     /helpappendresourcesstudents        controllers.Application.helpappendresourcesstudents()
GET     /helpappendresourcesprofessors        controllers.Application.helpappendresourcesprofessors()
GET     /helptablets                     controllers.Application.helptablets()




#Blog
GET		/news							controllers.Application.news()
GET		/news:blog						controllers.BlogController.blog(blog: Long)
POST	/news:blog/postcomment			controllers.BlogController.postcomment(blog: Long)

#Professors
GET		/professors/:professor			controllers.Application.professorprofile(professor: String)
GET		/students/:student				controllers.Application.studentprofile(student: String)


#Mark Answers
GET		/answerstomark						controllers.StudentMarkerController.answersToMark()
GET		/answerstomark/answer:answer		controllers.StudentMarkerController.answerToMark(answer: Long)
POST    /answerstomark/answer:answer/postevaluation controllers.StudentMarkerController.markanswer(answer: Long)
GET		/modules/:module/:lesson/testanalysis:test/:question		controllers.StudentTestController.questionanalysis(question: Long,test: Long, lesson: String,module: String)

#Modules
##CHECK THIS ROUTE
GET		/modules							controllers.Application.modules()
GET  	/modules/:module					controllers.Application.module(module: String)
GET		/modules/:module/signup				controllers.StudentController.signupmodule(module: String)
GET     /:continent          				controllers.Application.continent(continent: String)
GET  	/modules/:module/lessons/:lesson	controllers.Application.lesson(module: String, lesson: String)

#FORUM
GET		/modules/:module/forum							controllers.ForumController.forum(module: String)
GET		/modules/:module/forum/topic/:topic 			controllers.ForumController.topic(module: String, topic: Long)
GET		/modules/:module/forum/addtopic					controllers.ForumController.addtopic(module: String)
GET		/modules/:module/forum/topic/:topic/addReply 	controllers.ForumController.addReply(module: String, topic: Long)

#Professor Module
GET /modules/:module/deletebibliographyitem controllers.ProfessorModuleController.deletebibliographyitem(module: String, bibliography: Long)
POST /modules/:module/editbibliographyitem	controllers.ProfessorModuleController.editbibliographyitem(module: String, bibliography: Long)
POST /modules/:module/addbibliographyitem	controllers.ProfessorModuleController.addbibliographyitem(module: String)
POST /module/:module/editmoduletitle		controllers.ProfessorModuleController.editmoduletitle(module: String)
POST /module/:module/editmoduledescription		controllers.ProfessorModuleController.editmoduledescription(module: String)
POST /module/:module/editmoduledcontent		controllers.ProfessorModuleController.editmoduledcontent(module: String, content: Long)
POST /module/:module/addmoduledcontent		controllers.ProfessorModuleController.addmoduledcontent(module: String)
GET /module/:module/deletemodulecontent		controllers.ProfessorModuleController.deletemodulecontent(module: String, content: Long)
GET /modules/:module/:lesson/test:test				controllers.ProfessorTestController.test(module: String, lesson:String, test: Long)
GET	/modules/:module/:lesson/test:usertest/grade:question	controllers.ProfessorTestController.gradetest(module: String, lesson: String, usertest:Long, question:Long)
POST /modules/:module/:lesson/test:usertest/grade:question/markanswer	controllers.ProfessorTestController.markanswer(module: String, lesson: String, usertest:Long, question:Long, question_id: Long)
GET /modules/:module/:lesson/test:test/submitreviewedtest  controllers.ProfessorTestController.submitreviewedtest(module: String, lesson:String, test: Long, usertest: Long)
GET /modules/:module/lesson/:lesson/deletetest			controllers.ProfessorTestController.deletetest(test: Long ,module: String ,lesson: String )
POST /modules/:module/addlesson						controllers.ProfessorModuleController.addlesson(module: String)
GET /modules/:module/verifyLesson			controllers.ProfessorModuleController.verifyLesson(module: String)

#Professor Lesson
POST /modules/:module/lesson/:lesson/addlessonalert		controllers.ProfessorLessonController.addlessonalert(module: String, lesson: String)
POST /modules/:module/lesson/:lesson/addlessoncontent		controllers.ProfessorLessonController.addlessoncontent(module: String, lesson: String)		
POST /modules/:module/lesson/:lesson/editlesson			controllers.ProfessorLessonController.editlesson(module: String, lesson: String)
GET /modules/:module/lesson/:lesson/:question/deletequestion			controllers.ProfessorLessonController.deletequestion(module: String, lesson: String, question: Long )


#Professor Test
POST /modules/:module/:lesson/addtest		controllers.ProfessorTestController.addtest(module: String, lesson: String)
POST /modules/:module/:lesson/edittest/:test		controllers.ProfessorTestController.edittesttitle(module: String, lesson: String, test: Long)
POST /modules/:module/:lesson/changetestdates/:test		controllers.ProfessorTestController.changetestdates(module: String, lesson: String, test: Long)
POST /modules/:module/:lesson/changesuggestrequiredsettings/:test		controllers.ProfessorTestController.changesuggestrequiredsettings(module: String, lesson: String, test: Long)


GET /modules/:module/:lesson/edittest/:test/:group/removequestion/:question controllers.ProfessorTestController.removequestion(module: String,lesson: String,test: Long,group: Long,question: Long)
GET /modules/:module/:lesson/edittest/:test		controllers.ProfessorTestController.edittest(module: String, lesson: String, test: Long)
GET /modules/:module/:lesson/edittest/:test/:group/editgroup controllers.ProfessorTestController.editgroup(module: String, lesson: String, test: Long, group: Long)   
GET /modules/:module/:lesson/edittest/:test/:group/addopenquestion	controllers.ProfessorTestController.addopenquestion(module: String, lesson: String, test: Long, group: Long)		
GET /modules/:module/:lesson/edittest/:test/addopenquestionform/:group	controllers.ProfessorTestController.addopenquestionform(module: String, lesson: String, test: Long, group: Long)		
GET /modules/:module/:lesson/edittest/:test/editopenquestionform/group/:group/:question	controllers.ProfessorTestController.editopenquestionform(module: String, lesson: String, test: Long, group: Long, question: Long)		
GET /modules/:module/:lesson/edittest/:test/editopenquestion/group/:group/:question	controllers.ProfessorTestController.editopenquestion(module: String, lesson: String, test: Long, group: Long, question: Long)		

GET /modules/:module/:lesson/edittest/:test/onechoicequestionform/:group	controllers.ProfessorTestController.addonechoicequestionform(module: String, lesson: String, test: Long, group: Long)		
GET /modules/:module/:lesson/edittest/:test/addonechoicequestion/:group	controllers.ProfessorTestController.addonechoicequestion(module: String, lesson: String, test: Long, group: Long)		
GET /modules/:module/:lesson/edittest/:test/:group/editonechoicequestionform/:question	controllers.ProfessorTestController.editonechoicequestionform(module: String, lesson: String, test: Long, group: Long, question: Long)		
GET /modules/:module/:lesson/edittest/:test/:group/editonechoicequestion/:question	controllers.ProfessorTestController.editonechoicequestion(module: String, lesson: String, test: Long, group: Long, question: Long)		
GET /modules/:module/:lesson/edittest/:test/:group/addhypothesisform/:question	controllers.ProfessorTestController.addhypothesisform(module: String, lesson: String, test: Long, group: Long, question:Long)		
GET /modules/:module/:lesson/edittest/:test/:group/addhypothesis/:question	controllers.ProfessorTestController.addhypothesis(module: String, lesson: String, test: Long, group: Long, question:Long)		
GET /modules/:module/:lesson/edittest/:test/:group/:question/changerightonechoiceanswer/:hypothesis	controllers.ProfessorTestController.changerightonechoiceanswer(module: String, lesson: String, test: Long, group: Long, question:Long, hypothesis:Long)		

GET /modules/:module/:lesson/edittest/:test/multiplechoicequestionform/:group	controllers.ProfessorTestController.addmultiplechoicequestionform(module: String, lesson: String, test: Long, group: Long)		
GET /modules/:module/:lesson/edittest/:test/addmultiplechoicequestion/:group	controllers.ProfessorTestController.addmultiplechoicequestion(module: String, lesson: String, test: Long, group: Long)		
GET /modules/:module/:lesson/edittest/:test/:group/addmultiplehypothesisform/:question	controllers.ProfessorTestController.addmultiplehypothesisform(module: String, lesson: String, test: Long, group: Long, question:Long)		
GET /modules/:module/:lesson/edittest/:test/:group/addmultiplehypothesis/:question	controllers.ProfessorTestController.addmultiplehypothesis(module: String, lesson: String, test: Long, group: Long, question:Long)		
GET /modules/:module/:lesson/edittest/:test/:group/:question/changerightmultiplechoiceanswer/:hypothesis	controllers.ProfessorTestController.changerightmultiplechoiceanswer(module: String, lesson: String, test: Long, group: Long, question:Long, hypothesis:Long)		
GET /modules/:module/:lesson/edittest/:test/:group/editmultiplechoicequestionform/:question	controllers.ProfessorTestController.editmultiplechoicequestionform(module: String, lesson: String, test: Long, group: Long, question: Long)		
GET /modules/:module/:lesson/edittest/:test/:group/editmultiplechoicequestion/:question	controllers.ProfessorTestController.editmultiplechoicequestion(module: String, lesson: String, test: Long, group: Long, question: Long)		
GET /modules/:module/:lesson/edittest/:test/:group/:question/edithypothesis/:hypothesis	controllers.ProfessorTestController.edithypothesis(module: String, lesson: String, test: Long, group: Long, question:Long, hypothesis: Long)		
GET /modules/:module/:lesson/edittest/:test/:group/:question/editmultiplechoicehypothesis/:hypothesis	controllers.ProfessorTestController.editmultiplechoicehypothesis(module: String, lesson: String, test: Long, group: Long, question:Long, hypothesis: Long)		

GET /modules/:module/:lesson/edittest/:test/:group/:question/removemultiplechoicehypothesis/:hypothesis	controllers.ProfessorTestController.removemultiplechoicehypothesis(module: String, lesson: String, test: Long, group: Long, question:Long, hypothesis: Long)		
GET /modules/:module/:lesson/edittest/:test/:group/:question/removeonechoicehypothesis/:hypothesis	controllers.ProfessorTestController.removeonechoicehypothesis(module: String, lesson: String, test: Long, group: Long, question:Long, hypothesis: Long)		
GET /modules/:module/:lesson/edittest/:test/:group/preview	controllers.ProfessorTestController.preview(module: String, lesson: String, test: Long, group: Long)



GET /modules/:module/:lesson/edittest/:test/addgroup	controllers.ProfessorTestController.addgroup(module: String, lesson: String, test: Long)	
GET /modules/:module/:lesson/edittest/:test/deletegroup/:group	controllers.ProfessorTestController.deletegroup(module: String, lesson: String, test: Long,group: Long)		
GET /modules/:module/:lesson/edittest/:test/publish	controllers.ProfessorTestController.publish(module: String, lesson: String, test: Long)
GET /modules/:module/:lesson/edittest/:test/unpublish	controllers.ProfessorTestController.unpublish(module: String, lesson: String, test: Long)
GET /modules/:module/:lesson/edittest/:test/reusequestionadd	controllers.ProfessorTestController.reusequestionadd(module: String, lesson: String, test: Long, group: Long, question: Long)



		
#Curriculum Modules
GET /curriculum/category:category					controllers.Application.categoryModules(category: Long)

#Lessons
GET		/modules/:module/:lesson			controllers.StudentController.lesson(lesson: String, module: String)
POST 	/modules/:module/:lesson/addquestion 				controllers.StudentTestController.addquestion(test: Long, lesson: String, module: String)
GET 	/modules/:module/:lesson/signuptest 				controllers.StudentTestController.signuptest(test: Long, lesson: String, module: String)


#Tests
GET		/modules/:module/:lesson/test:test/:question		controllers.StudentTestController.question(question: Int,test: Long, lesson: String,module: String)


#Questions
POST    /modules/:module/:lesson/test:test/postquestion     controllers.StudentTestController.postquestion(question_number: Int, module: String, lesson: String, test: Long, usertest: Long,question: Long)
GET		/modules/:module/:lesson/submitTest					controllers.StudentTestController.submitTest(test: Long,lesson: String,module: String)
GET 	/modules/:module/:lesson/test:test/:question/voteurl	controllers.StudentTestController.voteurl(url: Long, question: Int, test: Long, lesson: String, module: String)
POST	/modules/:module/:lesson/test:test/:question/addurl controllers.StudentTestController.addurl(question: Int, test: Long, lesson: String, module: String, question_id: Long)
#POST /modules/:module/:lesson/test:test/:usertest/saveanswer/:question/:answer_text	controllers.StudentTestController.saveanswer(module: String, lesson: String, test: Long,usertest: Long, question: Long, answer_text: String)
POST /saveopenanswer	controllers.StudentTestController.saveopenanswer()
POST /savemultiplechoiceanswer 			controllers.StudentTestController.savemultiplechoiceanswer()


#API
GET /api/modules	                                controllers.ApiController.getModules()
GET /api/news	                                    controllers.ApiController.getNews()
GET /api/curriculum	                                controllers.ApiController.getCurriculumDendrogram()
GET /api/moduledendrogram/:module	                controllers.ApiController.getModuleDendrogram(module: String)
GET /api/news/:news/comments	                    controllers.ApiController.getNewsComments(news: Long)
GET /api/module/:module                             controllers.ApiController.getModule(module: String)
GET	/api/module/:module/lesson/:lesson              controllers.ApiController.getLesson(module: String, lesson: String)
GET /api/module/:module/lesson/:lesson/test/:test   controllers.ApiController.getTest(module: String, lesson: String ,test: Long)
POST /api/saveanswer                                controllers.ApiController.saveQuestion()
POST /api/usertest/:usertest/savemultipleanswer     controllers.ApiController.saveMutipleAnswer(usertest: Long)
GET /api/question/:question/geturls                 controllers.ApiController.getListOfURLs(question: Long)
GET /api/question/:question/gettopurls              controllers.ApiController.getListOfTopURLs(question: Long)
POST /api/question/:question/addurl                 controllers.ApiController.addURL(question: Long)
POST /api/likeurl/:url                              controllers.ApiController.likeURL(url: Long)
POST /api/signup/:test                              controllers.ApiController.signinTest(test: Long)
POST /api/submittest/:test                          controllers.ApiController.submitTest(test: Long)
POST /api/register                                  controllers.ApiController.register()
GET /api/module/:module/forum	                    controllers.ApiController.getModuleForum(module: String)
POST /api/news/:blog/comment                        controllers.ApiController.commentNews(blog: Long)
POST /api/curriculumvote                            controllers.ApiController.voteCurriculumResource()
GET /api/dashboard	                                controllers.ApiController.getDashboard()
POST /api/authenticate                              controllers.ApiController.authenticate()


# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.at(path="/public", file)
